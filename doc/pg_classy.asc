pg_classy
========
Jim C. Nasby <Jim.Nasby@BlueTreble.com>
v0.0.1, January 2015:
Initial draft.

= API

= Implementation
=== class_new
[subs="macros"]
----
pg_classy.class_new(
    class_name text
    , parameters variant
)
DECLARE
    r_class record;
    r_instantiated record;
    v_parameters variant := paramaters;
    v_unique_parameters variant;
BEGIN
r_class := _pg_classy.class__get(class_name); -- Note that class definitions will actually be stored in multiple tables

IF NOT FOUND THEN ERROR;

/*
 * Extract parameter values that will uniquely identify this instance of
 * class_name and make sure we haven't already registered them.
 */

v_unique_parameters := extract_parameters(r_class.unique_parameters, parameters);

/*
 * See if we're already instantiated. We don't bother with race condition
 * because our insert at the bottom will eventually fail if nothing else.
 */
r_instantiated := _pg_classy.instantiated__get( class_name, v_unique_paramaters );
IF FOUND THEN ERROR

/*
 * We may have an array of creation templates, and each template may require
 * pre-processing our parameters.
 */

FOR i IN array_lower(creation_template, 1)...array_upper(creation_template, 1)
LOOP
    IF creation_preprocess[i] IS NOT NULL THEN
        v_paramaters := https://github.com/decibel/trunklet/blob/master/doc/trunklet.asc#execute_into[execute_into(creation_preprocess[i], parameters)];
    END IF;

    template_execute(creation_template[i], v_parameters);
END LOOP;

BEGIN
INSERT INTO _pg_classy.instances(class_id, class_version, unique_parameters, final_parameters)
    VALUES( r_class.class_id, r_class.version, v_unique_parameters, v_paramaters )
;
EXCEPTION
    WHEN unique_violation THEN
        RAISE EXCEPTION 'class % identified by % already instantiated',
            class_name, v_unique_paramaters
        ;
END
END
----


=== Copyright and License
Copyright (c) 2015 Jim C. Nasby <Jim.Nasby@BlueTreble.com>.

